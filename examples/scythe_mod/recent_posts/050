//http://stackoverflow.com/questions/39954877/merge-tables-based-on-a-column

#input

role_id,     role_type,    company,     ref_id
   1   ,         A    ,       X   ,        1
   2   ,         B    ,       Y   ,        4
   3   ,         A    ,       Z   ,        2
   4   ,         B    ,       X   ,        5

#input

employee_id,    employee_name,     joining_date
     1     ,      Einstein   ,      "01/24/1998"
     2     ,      Maxwell    ,      "03/16/2002"

#input

org_id  ,      org_name       ,  org_max  
  4     ,      Google         ,     "45"    
  5     ,      Yahoo          ,    "300"    

#output

role_id,      role_type,         ref_id,    ref_name     ,  ref_joining_date
   1   ,          A    ,             1  ,    Einstein     ,     "01/24/1998"
   2   ,          B    ,             4  ,    Google       ,     "45"
   3   ,          A    ,             2  ,    Maxwell      ,     "03/16/2002"
   4   ,          B    ,             5  ,    Yahoo        ,     "300"

#constraint
{
	"constants": ["A", "B"],
	"aggregation_functions": []
}

#solution

```sql
SELECT t1.role_id,
       t1.role_type,
       t1.company,
       t1.ref_id,
       COALESCE(e.employee_name, o.org_id) AS ref_name,
       e.joining_date                      AS ref_joining_date,
       o.org_max                           AS ref_org_max
FROM   roles t1
       LEFT JOIN employee
              ON e.employee_id = t1.ref_id
                 AND t1.role_type = 'A'
       LEFT JOIN organisations o
              ON o.org_id = t1.ref_id
                 AND t1.role_type = 'B'
```

// another solution: use join and UNOIN